<?php
namespace api\lib;

use common\models\user\User;
use Yii;
use yii\base\Event;
use yii\web\Response;
use yii\web\HttpException;
use yii\rest\ActiveController;
use yii\helpers\ArrayHelper;

/**
 * Class ApiController
 * @package api\controllers
 */
class ApiController extends ActiveController
{
    /**
     * @var string
     */
    public $modelClass = '';
    public $authActions = [];

    /**
     * {@inheritdoc}
     */
    public function init()
    {
        //设置response
        Yii::$app->setComponents(["response"=>['class' => 'api\lib\ApiResponse',]]);

        // TODO: Change the autogenerated stub
        parent::init();
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return ArrayHelper::merge(parent::behaviors(),[
            //配置跨域
            'corsFilter' => [
                'class' => \yii\filters\Cors::className(),
                'cors' => [
                    'Origin' => ['*'],
                    'Access-Control-Allow-Origin' => ['*'],
                    'Access-Control-Request-Method' => ['*'],
                    'Access-Control-Request-Headers' => ['*'],
                ],
            ],
            //配置行为
            /*'apiBehavior' => [
                'class' => ApiBehavior::className(),
            ]*/
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function beforeAction($action)
    {
        //判断是否要对请求进行认证
        if(in_array($action->id, $this->authActions)){
            //获取header信息
            $headers = Yii::$app->request->headers;

            //判断认证信息是否有效
            if(!isset($headers["user_id"]) || !isset($headers["user_token"])){
                throw new HttpException(401,"user or token not found");
            }

            //获取用户信息
            $user = User::findOne($headers["user_id"]);
            if(empty($user)){
                throw new HttpException(401,"user not found");
            }

            //判断用户token是否正确
            if($user->login_token != $headers["user_token"]){
                throw new HttpException(401,"auth fail");
            }
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }
}
