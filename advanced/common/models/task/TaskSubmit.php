<?php

namespace common\models\task;

use common\models\user\UserCourse;
use Yii;
use common\models\user\User;
use common\models\course\Course;

/**
 * This is the model class for table "task_submit".
 *
 * @property int $id
 * @property int $task_id
 * @property int $user_id
 * @property int $course_id
 * @property string $submit_content
 * @property string $submit_file
 * @property string $submit_audio
 * @property string $reply_content
 * @property string $reply_file
 * @property string $reply_audio
 * @property int $status
 * @property int $submit_at
 * @property int $reply_at
 *
 * @property Task $task
 * @property User $user
 * @property Course $course
 */
class TaskSubmit extends \yii\db\ActiveRecord
{
    /**
     * @var bool 是否模型保存后，执行完成章节学习的一系列操作
     */
    private $action_completed = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'task_submit';
    }

    /**
     * @return array
     */
    public function fields()
    {
        $parent = parent::fields();
        $parent["userName"] = "userName";
        $parent["submitTime"] = "submitTime";
        $parent["replyTime"] = "replyTime";
        return $parent;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['task_id', 'user_id'], 'required'],
            [['task_id', 'user_id', 'course_id', 'status', 'submit_at', 'reply_at'], 'integer'],
            [['submit_content', 'reply_content'], 'string'],
            [['submit_file', 'submit_audio', 'reply_file', 'reply_audio'], 'string', 'max' => 256],
            [['task_id', 'user_id'], 'unique', 'targetAttribute' => ['task_id', 'user_id']],
            [['task_id'], 'exist', 'skipOnError' => true, 'targetClass' => Task::className(), 'targetAttribute' => ['task_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'task_id' => '作业ID',
            'user_id' => '用户ID',
            'course_id' => '课程ID',
            'submit_content' => '提交答案',
            'submit_file' => '提交文件',
            'submit_audio' => '提交音频',
            'reply_content' => '回复内容',
            'reply_file' => '回复文件',
            'reply_audio' => '回复音频',
            'status' => '状态',
            'submit_at' => '提交时间',
            'reply_at' => '回复时间',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTask()
    {
        return $this->hasOne(Task::className(), ['id' => 'task_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCourse()
    {
        return $this->hasOne(User::className(), ['id' => 'course_id']);
    }

    /**
     * @return string
     */
    public function getUserName(){
        return empty($this->user->nickname) ? "" : $this->user->nickname;
    }

    /**
     * @return false|string
     */
    public function getSubmitTime(){
        return empty($this->submit_at) ? "" : Date("Y-m-d H:i:s", $this->submit_at);
    }

    /**
     * @return false|string
     */
    public function getReplyTime(){
        return empty($this->reply_at) ? "" : Date("Y-m-d H:i:s", $this->reply_at);
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        //添加提交时间
        if($insert) {
            $this->submit_at = time();
        }

        //判断触发作业完成一系列事件
        if(isset($this->oldAttributes["status"]) && $this->oldAttributes["status"] === 1 && $this->status > 1){
            $this->action_completed = true;
        }

        //调用父函数
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        //触发作业完成一系列事件
        if($this->action_completed){
            //刷新进度
            $user_course = UserCourse::findOne(["user_id"=>$this->user_id,"course_id"=>$this->course_id]);
            $user_course->refreshProgress(true);

            //发送作业完成邮件
            Yii::$app->mailer->compose('template/completed', ["model"=>$this])
                ->setFrom(Yii::$app->params["supportEmail"])
                ->setTo([$this->user->email])
                ->setSubject('i-Link 完成章节学习')
                ->send();
        }

        //执行父函数
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @param $task_id
     * @return array|\yii\db\ActiveRecord[]
     */
    static public function getSubmits($task_id){
        $find = self::find()->andWhere(["task_id" => $task_id]);
        $list = $find->all();
        return $list;
    }

    /**
     * @param $task_id
     * @param $user_id
     * @return array|null|\yii\db\ActiveRecord
     */
    static public function getSubmit($task_id, $user_id){
        return self::find()->andWhere(["task_id" => $task_id, "user_id" => $user_id])->one();
    }
}
